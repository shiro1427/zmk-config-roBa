#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "hold-preferred";
    quick-tap-ms = <0>;
};

&sl { release-after-ms = <250>; };

/ {
    combos {
        compatible = "zmk,combos";

        BT0 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <28 22>;
        };

        BT1 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <28 23>;
        };

        BT2 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <28 24>;
        };

        BT3 {
            bindings = <&none>;
            key-positions = <28 25>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <12 11>;
        };

        shifttab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        shiftenter {
            bindings = <&kp LS(ENTER)>;
            key-positions = <37 39>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };

        mkp_exit_AML_LAYER: mkp_exit_AML_LAYER {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &to MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML_LAYER";
        };
    };

    behaviors {
        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            // 追加: スクロールのタップ時間を設定 (20ms)

            tap-ms = <20>;
        };

        multi_tap_tab_bspc: behavior_multi_tap {
            label = "MT_TAB_BSPC";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&kp BSPC>;

            max-taps = <2>;
            max-tap-interrupt-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W             &kp E         &kp R             &kp T                                                 &kp Y        &kp U  &lt 5 I    &kp O    &kp P
&kp A      &kp S             &kp D         &kp F             &kp G        &kp ESCAPE              &kp MINUS        &kp H        &kp J  &kp K      &kp L    &kp SEMI
&kp Z      &kp X             &kp C         &kp V             &kp B        &kp SQT                 &kp EQUAL        &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL  &kp LEFT_COMMAND  &kp LEFT_ALT  &lt 6 LANG_HANJA  &lt 2 SPACE  &lt 3 LANG_HANGEUL      &lt 4 BACKSPACE  &lt 1 ENTER                             &kp DEL
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SYMBOLS {
            bindings = <
&trans     &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans         &trans             &trans
&kp TILDE  &kp DOLLAR       &kp PERCENT   &kp CARET             &trans                 &trans      &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON  &kp SINGLE_QUOTE   &kp BACKSLASH
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &trans                 &trans      &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp COLON      &kp DOUBLE_QUOTES  &kp PIPE
&trans     &trans           &trans        &trans                &trans                 &trans      &trans  &trans                                                                         &trans
            >;
        };

        NUM {
            bindings = <
&trans   &kp F7  &kp F8  &kp F9  &kp F10                          &kp PLUS      &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&trans   &kp F4  &kp F5  &kp F6  &kp F11  &trans       &trans     &kp ASTERISK  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH
&kp ESC  &kp F1  &kp F2  &kp F3  &kp F12  &kp F13      &kp EQUAL  &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD
&trans   &trans  &trans  &trans  &trans   &trans       &trans     &trans                                                  &trans
            >;
        };

        ARROW {
            bindings = <
&kp LG(LEFT_ARROW)  &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &kp LG(RIGHT_ARROW)                      &kp LG(LEFT_ARROW)  &kp LS(LC(TAB))     &kp UP_ARROW    &kp LC(TAB)          &kp LG(RIGHT_ARROW)
&kp HOME            &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END              &trans      &trans  &kp HOME            &kp LEFT_ARROW      &kp DOWN_ARROW  &kp RIGHT_ARROW      &kp END
&kp LEFT_SHIFT      &kp LG(LC(LEFT_ARROW))  &kp LG(TAB)     &kp LG(LC(RIGHT_ARROW))  &trans               &trans      &trans  &trans              &kp LC(LEFT_ARROW)  &kp LC(UP)      &kp LC(RIGHT_ARROW)  &trans
&trans              &trans                  &trans          &trans                   &trans               &trans      &trans  &trans                                                                       &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                 &to_layer_0 Y  &to_layer_0 U  &trans             &to_layer_0 O  &to_layer_0 P
&trans  &trans  &trans  &trans  &trans  &trans      &to_layer_0 MINUS  &to_layer_0 H  &mkp MB1       &mkp MB3           &mkp MB2       &to_layer_0 SEMI
&trans  &trans  &trans  &trans  &trans  &trans      &to_layer_0 EQUAL  &to_layer_0 M  &mkp MB4       &to_layer_0 COMMA  &mkp MB5       &to_layer_0 SLASH
&trans  &trans  &trans  &trans  &trans  &trans      &trans             &trans                                                          &to_layer_0 DELETE
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
